---
- name: Application | Trigger Application Restart
  debug: msg="Trigger Application Restart"
  changed_when: true
  notify:
    - restart celery workers
    - restart uvicorn
    - restart app
  tags:
    - never
    - restart

- name: Application | Clone or pull git repository
  become: yes
  become_user: "{{ project_user }}"
  git: >
    repo={{ repo.url }}
    dest={{ project_src }}
    version={{ repo.version }}
    accept_newhostkey=yes
    force={{ repo.force|d(True) }}
    update=yes
  notify:
    - restart celery workers
    - restart uvicorn
    - restart app
  tags:
    - deploy

- name: Application | Install python-dotenv
  pip:
    name: python-dotenv
    virtualenv: '{{ virtualenv }}'
    state: present

- name: Application | Create .env file
  when:
    - dot_env_file.dest is defined 
    - dot_env is defined
  become: yes
  become_user: "{{ project_user }}"
  template:
    src: env-file.template
    dest: "{{ dot_env_file.dest }}"
    owner: "{{ dot_env_file.owner | default(omit) }}"
    group: "{{ dot_env_file.group | default(omit) }}"
    mode: "{{ dot_env_file.mode | default(omit) }}"
    backup: "{{ dot_env_file.backup | default(omit) }}"
    force: "{{ dot_env_file.force | default(True) }}"
    validate: "{{ dot_env_file.validate | default(omit) }}"
    selevel: "{{ dot_env_file.selevel | default(omit) }}"
    serole: "{{ dot_env_file.serole | default(omit) }}"
    setype: "{{ dot_env_file.setype | default(omit) }}"
    seuser: "{{ dot_env_file.seuser | default(omit) }}"
  notify:
    - restart celery workers
    - restart uvicorn
    - restart app
  tags:
    - deploy

- name: Application | Upload template files
  when:
    - template_files is defined
  become: yes
  become_user: "{{ project_user }}"
  template:
    src: "{{ item.template }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    backup: "{{ item.backup | default(omit) }}"
    force: "{{ item.force | default(True) }}"
    validate: "{{ item.validate | default(omit) }}"
    selevel: "{{ item.selevel | default(omit) }}"
    serole: "{{ item.serole | default(omit) }}"
    setype: "{{ item.setype | default(omit) }}"
    seuser: "{{ item.seuser | default(omit) }}"
  with_items: "{{ template_files }}"
  notify:
    - restart celery workers
    - restart uvicorn
    - restart app
  tags:
    - deploy

- name: Application | Set Package Manager
  include_role:
    name: package_manager
  tags:
    - deploy
    - virtualenv

- name: Application | Setup Django Application
  include_role:
    name: django
  when: django is defined

- name: Application | Setup FastAPI Application
  include_role:
    name: fastapi
  when: fastapi is defined

- name: Application | Run Supervisor Tasks
  include_role:
    name: supervisor
  when: supervisor is defined

- name: Application | Run Uvicorn Tasks
  include_role:
    name: uvicorn
  when: uvicorn is defined

- name: Application | Run uWSGI Tasks
  include_role:
    name: uwsgi
  when: uwsgi is defined

- name: Application | Run Celery Tasks
  include_role:
    name: celery
  when: celery is defined