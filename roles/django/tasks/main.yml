---
# Main deployment workflow
- name: Django | Build new environment dictionary
  set_fact:
    dotenv_with_superuser: "{{ dot_env | combine({'DJANGO_SUPERUSER_PASSWORD': '{{ django.superuser.password }}'}, recursive=true) }}"

- name: Django | Run database migrations
  when: django_commands.migrate|d(False) == True
  become_user:  "{{ project_user }}"
  django_manage: >
    command=migrate
    app_path={{ app_working_dir }}
    settings={{ django.settings }}
    virtualenv={{ virtualenv }}
  environment: "{{ dot_env }}"
  tags:
    - deploy

- name: Django | Install database fixtures
  when: django_commands.fixtures is defined
  become_user: "{{ project_user }}"
  django_manage: >
    command=loaddata
    fixtures={{ item }}
    app_path={{ app_working_dir }}
    settings={{ django.settings }}
    virtualenv={{ virtualenv }}
  with_items: "{{ django_commands.fixtures }}"
  environment: "{{ dot_env }}"
  tags:
    - deploy

- name: Django | Run collect static command
  when: django_commands.collectstatic|d(False) == True
  become_user: "{{ project_user }}"
  django_manage: >
    command=collectstatic
    app_path={{ app_working_dir }}
    settings={{ django.settings }}
    virtualenv={{ virtualenv }}
  environment: "{{ dot_env }}"
  tags:
    - deploy

- name: Django | Run createsuperuser command
  when: django.superuser is defined
  become_user: "{{ project_user }}"
  django_manage:
    command: "createsuperuser --noinput --username={{ django.superuser.username }} --email={{ django.superuser.email }}"
    app_path: "{{ app_working_dir }}"
    settings: "{{ django.settings }}"
    virtualenv: "{{ virtualenv }}"
  environment: "{{ dotenv_with_superuser }}"
  ignore_errors: yes
  tags:
    - setup