---
# Create users, file paths and install system packages
- import_tasks: base.yml

# Main deployment workflow
- name: Clone or pull git repository
  become: yes
  become_user: "{{ project_user }}"
  git: >
    repo={{ repo.url }}
    dest={{ project_src }}
    version={{ repo.branch }}
    force=yes
    update=yes
  tags:
    - deploy
  notify:
    - restart celery workers
    - restart uvicorn
    - restart app

- name: Create the .env file
  include_role:
    name: dot_env
  when:
    - dot_env_file.dest is defined 
    - dot_env is defined
  tags:
    - deploy

- name: Sync python package requirements using pipenv
  include_role:
    name: pipenv
  when:
    - pipenv is defined 
    - pipenv | bool
  tags:
    - deploy

- name: Run database migrations
  when: django_commands.migrate|d(False) == True
  become_user:  "{{ project_user }}"
  django_manage: >
    command=migrate
    app_path={{ project_src }}
    settings={{ django_settings }}
    virtualenv={{ virtualenv }}
  environment: "{{ dot_env }}"
  tags:
    - deploy

- name: Install database fixtures
  when: django_commands.fixtures is defined
  become_user: "{{ project_user }}"
  django_manage: >
    command=loaddata
    fixtures={{ item }}
    app_path={{ project_src }}
    settings={{ django_settings }}
    virtualenv={{ virtualenv }}
  with_items: "{{ django_commands.fixtures }}"
  environment: "{{ dot_env }}"
  tags:
    - deploy

- name: Run collect static command
  when: django_commands.collectstatic|d(False) == True
  become_user: "{{ project_user }}"
  django_manage: >
    command=collectstatic
    app_path={{ project_src }}
    settings={{ django_settings }}
    virtualenv={{ virtualenv }}
  environment: "{{ dot_env }}"
  tags:
    - deploy

- name: Run custom startup management commands 
  when:
    - django_commands.start_commands is defined
  become_user: "{{ project_user }}"
  django_manage: >
    command={{ item }}
    app_path={{ project_src }}
    settings={{ django_settings }}
    virtualenv={{ virtualenv }}
  with_items: "{{ django_commands.start_commands }}"
  environment: "{{ dot_env }}"
  tags:
    - deploy
    - start
    - restart